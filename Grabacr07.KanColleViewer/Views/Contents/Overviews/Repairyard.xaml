<UserControl x:Class="Grabacr07.KanColleViewer.Views.Contents.Overviews.Repairyard"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:metro2="clr-namespace:Grabacr07.Desktop.Metro.Controls;assembly=Desktop.Metro"
			 xmlns:properties="clr-namespace:Grabacr07.KanColleViewer.Properties"
			 xmlns:vContents="clr-namespace:Grabacr07.KanColleViewer.Views.Contents"
			 xmlns:vmContents="clr-namespace:Grabacr07.KanColleViewer.ViewModels.Contents"
			 xmlns:controls="clr-namespace:Grabacr07.KanColleViewer.Views.Controls"
			 xmlns:converters="clr-namespace:Grabacr07.KanColleViewer.Views.Converters"
			 xmlns:catalogs="clr-namespace:Grabacr07.KanColleViewer.Views.Catalogs"
			 xmlns:models="clr-namespace:Grabacr07.KanColleViewer.Models"
			 xmlns:behaviors="clr-namespace:Grabacr07.KanColleViewer.Views.Behaviors"
             d:DataContext="{d:DesignInstance vmContents:OverviewViewModel}"
			 mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderBrush"
						Value="{DynamicResource BorderBrushKey}" />
                <Setter Property="BorderThickness"
						Value="1" />
                <Setter Property="Padding"
						Value="4" />
                <Setter Property="Margin"
						Value="5,0,5,5" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static models:Settings.Current}, Path=Orientation.Mode}" Value="Vertical">
                        <Setter Property="Margin" Value="5,0,5,10"/>
                        <Setter Property="Padding" Value="8"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="JumbButtonStyleKey"
				   TargetType="{x:Type metro2:CallMethodButton}"
				   BasedOn="{StaticResource {x:Type metro2:CallMethodButton}}">
                <Setter Property="Background"
						Value="Transparent" />
                <Setter Property="Padding"
						Value="4" />
                <Setter Property="HorizontalContentAlignment"
						Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
						Value="Stretch" />
                <Setter Property="Margin"
						Value="5,0,5,5" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static models:Settings.Current}, Path=Orientation.Mode}" Value="Vertical">
                        <Setter Property="Margin" Value="5,0,5,10"/>
                        <Setter Property="Padding" Value="8"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Themes/Orientation.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>


    <metro2:CallMethodButton Style="{StaticResource JumbButtonStyleKey}"
										 MethodName="Jump"
										 MethodParameter="Repairyard"
										 Margin="0">
        <StackPanel DataContext="{Binding Content.Shipyard}">
            <TextBlock Text="{Binding Resources.Overview_RepairDock, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />

            <Rectangle Height="1"
								   Margin="0,3,0,0"
								   Style="{DynamicResource SeparatorRectangleStyleKey}" />

            <ItemsControl ItemsSource="{Binding RepairingDocks}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Style="{DynamicResource DefaultTextStyleKey}"
											   Margin="0,4,0,0">
										<Run x:Name="ShipName"
											 Text="{Binding Ship, Mode=OneWay}"
											 Style="{DynamicResource EmphaticTextElementStyleKey}" />
										<Run x:Name="Remaining"
											 Text="{Binding Remaining, StringFormat=- {0}, Mode=OneWay}" />
                        </TextBlock>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding State}"
													 Value="Locked">
                                <Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Repairyard_Locked, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State}"
													 Value="Unlocked">
                                <Setter TargetName="Remaining"
													Property="Text"
													Value="{Binding Resources.Reparyard_Unused, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
                                <Setter TargetName="ShipName"
													Property="Text"
													Value="" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </metro2:CallMethodButton>
</UserControl>
